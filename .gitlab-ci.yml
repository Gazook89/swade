image: node:lts

variables:
  PACKAGE_NAME: swade
  PACKAGE_TYPE: system
  PACKAGE_ARCHIVE: $PACKAGE_NAME-$CI_COMMIT_TAG
  PACKAGE_REGISTRY_URL: $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$PACKAGE_NAME

stages:
  - tests
  - build
  - prepare-release
  - release
  - publish

cache: &global_cache
  paths:
    - .npm

lint:
  stage: tests
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run check:lint
  cache:
    <<: *global_cache

typecheck:
  stage: tests
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run check:types
  cache:
    <<: *global_cache

build:
  stage: build
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - export NODE_ENV=production
    - |-
      npm run update-manifest -- \
      --systemVersion=${CI_COMMIT_TAG:1} \
      --manifest=$PACKAGE_REGISTRY_URL/latest/$PACKAGE_TYPE.json \
      --download=$CI_PROJECT_URL/-/releases/$CI_COMMIT_TAG/downloads/$PACKAGE_ARCHIVE.zip
    - npm run build:packs
    - npm run build
  cache:
    <<: *global_cache
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

publish-artifacts:
  stage: prepare-release
  image: alpine:latest
  before_script:
    - apk update
    - apk add zip curl
  script: |
    cd dist
    zip -r ../$PACKAGE_ARCHIVE.zip .
    cd ..
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $PACKAGE_ARCHIVE.zip "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_ARCHIVE.zip"
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/$PACKAGE_TYPE.json "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_TYPE.json"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'release job'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
  release:
    name: ${CI_COMMIT_TAG:1}
    tag_name: $CI_COMMIT_TAG
    description: '**Installation:** To manually install this release, please use the following manifest URL: $CI_PROJECT_URL/-/releases/$CI_COMMIT_TAG/downloads/$PACKAGE_TYPE.json'
    assets:
      links:
        - name: '$PACKAGE_ARCHIVE.zip'
          url: '$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_ARCHIVE.zip'
          filepath: /$PACKAGE_ARCHIVE.zip
          link_type: package
        - name: '$PACKAGE_TYPE.json'
          url: '$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_TYPE.json'
          filepath: /$PACKAGE_TYPE.json
          link_type: other

publish-latest-manifest:
  stage: publish
  image: alpine:latest
  before_script:
    - apk update
    - apk add zip curl
  script: |
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/$PACKAGE_TYPE.json "$PACKAGE_REGISTRY_URL/latest/$PACKAGE_TYPE.json"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
